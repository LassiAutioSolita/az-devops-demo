# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

variables:
  buildConfiguration: 'Release'

pool:
  vmImage: ubuntu-20.04

stages:
- stage: Build
  jobs:
    - job: Build
      steps:
        - task: DotNetCoreCLI@2
          displayName: dotnet test
          inputs:
            command: 'test'
            projects: '**/*UnitTests.csproj'
            arguments: '--configuration $(buildConfiguration)'
        - task: DotNetCoreCLI@2
          displayName: dotnet publish
          inputs:
            command: 'publish'
            publishWebProjects: false
            projects: '**/AzDevOpsDemoWebApplication.csproj'
            arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/build'
            zipAfterPublish: false
        - task: DotNetCoreCLI@2
          displayName: dotnet publish integration tests
          inputs:
            command: 'publish'
            publishWebProjects: false
            projects: '**/IntegrationTests.csproj'
            arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/integration_tests'
            zipAfterPublish: false
        - task: PublishBuildArtifacts@1
          displayName: Publish Build Artifact - The Build
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)/build'
            ArtifactName: 'build'
            publishLocation: 'Container'
        - task: PublishBuildArtifacts@1
          displayName: Publish Build Artifact - The Integration Tests
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)/integration_tests'
            ArtifactName: 'integration_tests'
            publishLocation: 'Container'

- stage: DeployToDev
  jobs:
  - deployment: DeployToDev
    environment: 'dev'
    strategy:
      runOnce:
        deploy:
          steps:
          - script: echo Faking that app is deployed to dev env...

- stage: TestDev
  displayName: Run integration tests against deployed app in dev end
  jobs:
  - deployment: TestDev
    environment: 'dev'
    strategy:
      runOnce:
        deploy:
          steps:
          - script: echo TODO run integration tests fro YAML...